name: Publish on PyPI

on:
  push:
    tags:
      # After vMajor.Minor.Patch _anything_ is allowed (without "/") !
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'stfc/janus-core' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install poetry
      run: pipx install poetry

    - name: Build project for distribution
      run: |
        poetry env use 3.11
        poetry build

    - name: Check prerelease
      id: check-prerelease
      run: |
        [[ "$(poetry version --short)" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] || echo prerelease=true >> $GITHUB_OUTPUT

    - name: Get version from pyproject.toml
      run: |
        export PYTHONPATH=$(pwd)
        echo "VERSION=$(poetry version --short)" >> $GITHUB_ENV

    - name: Check version matches tag
      if: ${{ ! contains(github.ref, env.VERSION) }}
      run: |
        echo "Git tag does not match version in pyproject.toml"
        exit 1

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: steps.check-prerelease.outputs.prerelease == 'true'
        skipIfReleaseExists: true

    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: poetry publish
