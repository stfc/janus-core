[project]
name = "janus-core"
version = "0.7.0"
description = "Tools for machine learnt interatomic potentials"
authors = [
    { name = "Elliott Kasoar" },
    { name = "Federica Zanca" },
    { name = "Harvey Devereux "},
    { name = "Patrick Austin" },
    { name = "David Mason" },
    { name = "Jacob Wilkins" },
    { name = "Alin M. Elena" },
]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
]
readme = "README.md"

dependencies = [
    "ase<4.0,>=3.23",
    "codecarbon<3.0.0,>=2.5.0",
    "mace-torch==0.3.9",
    "numpy<2.0.0,>=1.26.4",
    "phonopy<3.0.0,>=2.23.1",
    "pyyaml<7.0.0,>=6.0.1",
    "rich<14.0.0,>=13.9.1",
    "seekpath<2.0.0,>=1.9.7",
    "spglib<3.0.0,>=2.3.0",
    "torch<=2.2,>=2.1",
    "torch-dftd==0.4.0",
    "typer<1.0.0,>=0.12.5",
    "typer-config<2.0.0,>=1.4.2",
]

[project.optional-dependencies]
alignn = [
    "alignn == 2024.12.02",
]
chgnet = [
    "chgnet == 0.3.8",
]
m3gnet = [
    "matgl == 1.1.3",
    "dgl == 2.1.0",
]
sevennet = [
    "sevenn == 0.10.3",
]
all = [
    "janus-core[alignn]",
    "janus-core[chgnet]",
    "janus-core[m3gnet]",
    "janus-core[sevennet]",
]

[project.scripts]
janus = "janus_core.cli.janus:app"

[project.urls]
repository = "https://github.com/stfc/janus-core/"
documentation = "https://stfc.github.io/janus-core/"

[dependency-groups]
dev = [
    "coverage[toml]<8.0.0,>=7.4.1",
    "pgtest<2.0.0,>=1.3.2",
    "pytest<9.0,>=8.0",
    "pytest-cov<5.0.0,>=4.1.0",
    "tox-uv<2.0,>=1.16.1",
    "wheel<1.0,>=0.42",
]

docs = [
    "furo<2025.0.0,>=2024.1.29",
    "markupsafe<2.1",
    "numpydoc<2.0.0,>=1.6.0",
    "sphinx<8.0.0,>=7.2.6",
    "sphinxcontrib-contentui<1.0.0,>=0.2.5",
    "sphinxcontrib-details-directive<1.0,>=0.1",
    "sphinx-copybutton<1.0.0,>=0.5.2",
]

pre-commit = [
    "pre-commit<4.0.0,>=3.6.0",
    "ruff<1.0.0,>=0.7.4",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
python_files = "test_*.py"
addopts = '--cov-report xml'
pythonpath = ["."]

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source=["janus_core"]

[tool.ruff]
exclude = ["conf.py"]
target-version = "py310"

[tool.ruff.lint]
# Ignore complexity
ignore = ["C901"]
select = [
    # flake8-bugbear
    "B",
    # pylint
    "C", "R",
    # pydocstyle
    "D",
    # pycodestyle
    "E", "W",
    # Pyflakes
    "F", "FA",
    # pyupgrade
    "I",
    # pep8-naming
    "N",
    # isort
    "UP",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = false

[tool.numpydoc_validation]
# report on all checks, except the below
checks = [
    "all",
    "EX01",
    "SA01",
    "ES01",
]
# Don't report on objects that match any of these regex
exclude = [
    ".__weakref__$",
    ".__repr__$",
]

[tool.uv]
default-groups = [
    "dev",
    "docs",
    "pre-commit",
]
